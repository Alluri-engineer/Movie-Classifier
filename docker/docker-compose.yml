version: '3.8'

services:
  # Main movie genre prediction web application
  movie-genre-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: movie-genre-predictor
    ports:
      - "8080:8080"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - MODEL_PATH=/app/models/movie_genre_classifier.h5
      - LABELS_PATH=/app/models/genre_labels.pkl
    volumes:
      # Mount for persistent uploads (optional)
      - ./data/uploads:/app/uploads
      # Mount logs directory
      - ./data/logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - movie-genre-network

  # Redis for caching (optional - for production scaling)
  redis:
    image: redis:7-alpine
    container_name: movie-genre-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - movie-genre-network
    profiles:
      - production

  # Nginx reverse proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: movie-genre-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - movie-genre-app
    restart: unless-stopped
    networks:
      - movie-genre-network
    profiles:
      - production

networks:
  movie-genre-network:
    driver: bridge

volumes:
  redis_data:
    driver: local